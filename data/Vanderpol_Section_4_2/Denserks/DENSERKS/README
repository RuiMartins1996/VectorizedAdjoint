DENSERKS


DENSERKS is a Fortran sensitivity equation solver package designed for integrating models whose evolution can be described by ordinary differential equations (ODEs). A salient feature of DENSERKS is its support for both forward and adjoint sensitivity analyses, with built-in integrators for both first and second order continuous adjoint models. The software implements explicit Runge-Kutta methods with adaptive timestepping and high-order dense output schemes for the forward and the tangent linear model trajectory interpolation. Implementations of six Runge-Kutta methods are provided, with orders of accuracy ranging from two to eight. This makes DENSERKS suitable for a wide range of practical applications. The use of dense output, a novel approach in adjoint sensitivity analysis solvers, allows for a high-order cost-effective interpolation. This is a necessary feature when solving adjoints of nonlinear systems using highly accurate Runge-Kutta methods (order five and above). 3rd and 5th order Hermite interpolation schemes are also provided for use with the lower-order methods. To minimize memory requirements and make long-time integrations computationally efficient, DENSERKS implements a two-level checkpointing mechanism. 

The routines implemented by DENSERKS are:

*RKINT                            ->     forward model integration
*RKINT_TLM                  ->     tangent linear model integration
*RKINT_ADJDR            ->     single adjoint model integration
*RKINT_SOADR           ->     single second-order adjoint model integration
*RKINT_ADJDR_M      ->     multiple (M) first order adjoint model integrations reusing the forward model trajectory data
*RKINT_SOADR_M     ->     multiple (M) second order adjoint model integrations reusing the forward model and tangent linear model trajectory data

Structure of the files:

./src : this contains the source code
./examples : this contains the example problems source code
./lib : will contain the DENSERKS library (after building DENSERKS)
./lib/modules : will contain additional required module files
/bin : will contain the binaries for the example problems

For the Convection-Diffusion PDE example problem, one needs to link the implementation of L-BFGS-B by Prof. Jorge Nocedal:

    * J. Nocedal. Updating Quasi-Newton Matrices with Limited Storage (1980), Mathematics of Computation 35, pp. 773-782.
    * D.C. Liu and J. Nocedal. On the Limited Memory Method for Large Scale Optimization (1989), Mathematical Programming B, 45, 3, pp. 503-528.

 For convenience, the Fortran implementation of L-BFGS-B is included in the package and can be found in lbfgs.f90. Alternatively, the L-BFGS-B software can be downloaded from:

http://www.ece.northwestern.edu/~nocedal/lbfgs.html

Installation:

** Save the gz file in a fresh subdirectory on your system,denoted by ${DENSERKS_HOME}. To install, first type

    cd ${DENSERKS_HOME}
    gunzip denserks.tar.gz

to produce a file denserks.tar.  Then, type

    tar -xvf denserks.tar

** Open the file Makefile in an editor, e.g. "vi Makefile"
** Set the Fortran compiler, compiler flags and module include switch via the FC, FFLAGS and MODSWITCH variables. These flags may be architecture and compiler-dependent. The user is advised to read the compiler documentation for his/her particular plaform. Note the comments describing the erroneous behavior that can occur with some compilers and how to avoid any known compilation and runtime problems.
** Execute the command make. You should not get any error messages....


Uninstallation

*cd to the top installation directory ${DENSERKS_HOME}:

      cd $(DENSERKS_HOME)

*Remove object, module files and binaries using "make clean":

     make clean

*To remove all files generated during the build process (including modules and the denserks library denserks.a) use "make purge":

     make purge

